{
  "address": "0xCA355CE1D55670F7CE29Bb2d23061fe041Fd4B35",
  "abi": [
    {
      "inputs": [],
      "name": "AliasedPublicSignal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "getVerificationKeys",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_pubSignals",
          "type": "uint256[]"
        }
      ],
      "name": "isAliased",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_proofs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_pubSignals",
          "type": "uint256[]"
        }
      ],
      "name": "verifyProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x058722b8c4af5193f9af779dc083fe7cf9062a76e6971693eacf851323688d3d",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xb85b3D61439a3d70D3DF7913a3A764F352b32C55",
    "contractAddress": null,
    "transactionIndex": 1,
    "gasUsed": "1846005",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x177b92a430a1d91c7971a288fa5831ce991e8e533ff4daff3965a84d71dac0b3",
    "transactionHash": "0x058722b8c4af5193f9af779dc083fe7cf9062a76e6971693eacf851323688d3d",
    "logs": [],
    "blockNumber": 33,
    "cumulativeGasUsed": "1846005",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e08d6b930820ab219ef1afbfaba72b7a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AliasedPublicSignal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getVerificationKeys\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_pubSignals\",\"type\":\"uint256[]\"}],\"name\":\"isAliased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_proofs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_pubSignals\",\"type\":\"uint256[]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getVerificationKeys()\":{\"details\":\"returns the verification keys in the order that the verifier expects them: alpha, beta, gamma, delta, ICs..\"},\"isAliased(uint256[])\":{\"details\":\"return true if the public signal is aliased\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/primitive/passport_verifier.sol\":\"BabyZKGroth16PassportVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/primitive/passport_verifier.sol\":{\"content\":\"\\n// SPDX-License-Identifier: GPL-3.0\\n/*\\n    Copyright (c) 2021 0KIMS association.\\n    Copyright (c) [2024] Galxe.com.\\n\\n    Modifications to this file are part of the Galxe Identity Protocol SDK,\\n    which is built using the snarkJS template and is subject to the GNU\\n    General Public License v3.0.\\n\\n    snarkJS is free software: you can redistribute it and/or modify it\\n    under the terms of the GNU General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    This program is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU General Public License for more details.\\n\\n    You should have received a copy of the GNU General Public License\\n    along with this program. If not, see <https://www.gnu.org/licenses/>.\\n*/\\n\\npragma solidity >=0.8.4 <0.9.0;\\n\\ncontract BabyZKGroth16PassportVerifier {\\n    error AliasedPublicSignal();\\n\\n    // Scalar field size\\n    uint256 constant r   = 21888242871839275222246405745257275088548364400416034343698204186575808495617;\\n    // Base field size\\n    uint256 constant q   = 21888242871839275222246405745257275088696311157297823662689037894645226208583;\\n\\n    // Verification Key data\\n    uint256 constant alphax  = 20491192805390485299153009773594534940189261866228447918068658471970481763042;\\n    uint256 constant alphay  = 9383485363053290200918347156157836566562967994039712273449902621266178545958;\\n    uint256 constant betax1  = 4252822878758300859123897981450591353533073413197771768651442665752259397132;\\n    uint256 constant betax2  = 6375614351688725206403948262868962793625744043794305715222011528459656738731;\\n    uint256 constant betay1  = 21847035105528745403288232691147584728191162732299865338377159692350059136679;\\n    uint256 constant betay2  = 10505242626370262277552901082094356697409835680220590971873171140371331206856;\\n    uint256 constant gammax1 = 11559732032986387107991004021392285783925812861821192530917403151452391805634;\\n    uint256 constant gammax2 = 10857046999023057135944570762232829481370756359578518086990519993285655852781;\\n    uint256 constant gammay1 = 4082367875863433681332203403145435568316851327593401208105741076214120093531;\\n    uint256 constant gammay2 = 8495653923123431417604973247489272438418190587263600148770280649306958101930;\\n    uint256 constant deltax1 = 19465865793281917433205729628238261619528912558571179302590449641923237336493;\\n    uint256 constant deltax2 = 9836552181821908562825916423250803559339661121322145769320042878374376765273;\\n    uint256 constant deltay1 = 2972527452298515494899373054205226502120059050542082406518238980762330882252;\\n    uint256 constant deltay2 = 12421615868696903838937420292736115333185255389288618736203999552328749392036;\\n\\n    uint256 constant IC0x = 14776984778530556927051751502780752183532812497404227468852865294447689899684;\\n    uint256 constant IC0y = 17685773495787771094438025456819460668298495540048327298895397288184307325705;\\n    uint256 constant IC1x = 6664034107315858311511422569979074983940834486517859620395348427249564206809;\\n    uint256 constant IC1y = 12760303119269580208319586542009971848846817012628300531806360956833814629985;\\n    uint256 constant IC2x = 19366280974360769350356367686803112440430113251959095768046213591385594101452;\\n    uint256 constant IC2y = 17093801976549281609260567293079493225703051358912668487337441826987698704629;\\n    uint256 constant IC3x = 386851811089208845300030074706526125506346469239487083374842154361030488565;\\n    uint256 constant IC3y = 18722900404056108381554785792201341384763351744307988156700500270397393292732;\\n    uint256 constant IC4x = 4682885476595323933561358213075143845865774565593388066206531532132885959348;\\n    uint256 constant IC4y = 5850994174503380950194612080364128937581319994284055744730951666132926716666;\\n    uint256 constant IC5x = 15671798360572900223707477220512929244521356522801969550571363436690903144802;\\n    uint256 constant IC5y = 10365135309026182539079935651272653598311663268323515026144018074820112882940;\\n    uint256 constant IC6x = 19044951846105234723485623366315216752655547854406509098803621396685828349735;\\n    uint256 constant IC6y = 19119610279035899152877324941264186837683296682672983594588992458876011602394;\\n    uint256 constant IC7x = 3538973459932245424591080247559641414911379468388749572642782649132300694873;\\n    uint256 constant IC7y = 15450719178532314846227623080510163606699070908397610381718487804798251587693;\\n    uint256 constant IC8x = 16876617330818855626116296478024652384126117123695368471762633545558573896773;\\n    uint256 constant IC8y = 16193141427372493169292876992166155262969525209114649123090477166198873198166;\\n    uint256 constant IC9x = 12245164925172007974734702097824026495870184765972763204164284229199196985191;\\n    uint256 constant IC9y = 12877388159301963624026183752692400587898554342657425638914901104687244639616;\\n    uint256 constant IC10x = 1642518435529379014933816046234663107124606721915453421690810126711022023230;\\n    uint256 constant IC10y = 15532519778263684349242587058200885042110074093745843241055075421064406476669;\\n    uint256 constant IC11x = 1653927913992255150899961094135665055425982831140138862712571865555131509868;\\n    uint256 constant IC11y = 19393088897719280708581363655688228044720171045462825030543833052850948179740;\\n    uint256 constant IC12x = 13966415817554039303739898824237199730701799478932718815462469052086437585191;\\n    uint256 constant IC12y = 754271034707522992282394485482277485341974743131758625275366007666120138859;\\n    uint256 constant IC13x = 15884825247689712408312925540215748703066083669829831328659638305740457476879;\\n    uint256 constant IC13y = 12771933037538988398040840113815326310960186624471152131651855797745402277939;\\n    uint256 constant IC14x = 8394770979324344966026278699875572494666589345829918109276181251315274817937;\\n    uint256 constant IC14y = 11484580623249470639116718499851788517924543321814685177346338720867864440295;\\n    uint256 constant IC15x = 2607410923300790366774499215286000362261472013817978473990399675507507574512;\\n    uint256 constant IC15y = 6958758652141884706015711090185066201141278356799200066863982636406009987588;\\n    uint256 constant IC16x = 16765204562724608091354341011996342229773188726287008240326829505597474712634;\\n    uint256 constant IC16y = 19739567344797965471793313547844484828999916933327397878003982434835796394260;\\n    uint256 constant IC17x = 14074679229462710819872164161119812718373415447195746807959578699883989143186;\\n    uint256 constant IC17y = 10588000997939792236273108802221683663922471858182522013077384244140964700796;\\n    uint256 constant IC18x = 18426230130554689199393080729988153687119207645378405098824079273992586065141;\\n    uint256 constant IC18y = 8226264301303767066406457085142607073537275812022598298127625299231198633417;\\n    uint256 constant IC19x = 12018424623824039804768990498045015717817358670618610760607022379116842166459;\\n    uint256 constant IC19y = 19818733566309795525407328598613797183517002730310020378704719724980933829476;\\n    uint256 constant IC20x = 2155416569781886977751998854462475956858609815137594097300025364802951637558;\\n    uint256 constant IC20y = 141128875753766578724317791812215586543301183501077871848828184088510192733;\\n    uint256 constant IC21x = 13790369610773720064654435593502578583928416453136099982166437289553717459667;\\n    uint256 constant IC21y = 1426290107802354671423278516763628976372973919574173083902016091405801970355;\\n    // Memory data\\n    uint16 constant pVk = 0;\\n    uint16 constant pPairing = 128;\\n\\n    uint16 constant pLastMem = 896;\\n\\n    uint16 constant proofLength = 8;\\n    uint32 constant pubSignalLength = 21;\\n\\n    /// @dev returns the verification keys in the order that the verifier expects them:\\n    /// alpha, beta, gamma, delta, ICs..\\n    function getVerificationKeys() public pure returns (uint[] memory) {\\n        uint[] memory vks = new uint[](16 + pubSignalLength * 2);\\n        vks[0] = 20491192805390485299153009773594534940189261866228447918068658471970481763042;\\n        vks[1] = 9383485363053290200918347156157836566562967994039712273449902621266178545958;\\n        vks[2] = 4252822878758300859123897981450591353533073413197771768651442665752259397132;\\n        vks[3] = 6375614351688725206403948262868962793625744043794305715222011528459656738731;\\n        vks[4] = 21847035105528745403288232691147584728191162732299865338377159692350059136679;\\n        vks[5] = 10505242626370262277552901082094356697409835680220590971873171140371331206856;\\n        vks[6] = 11559732032986387107991004021392285783925812861821192530917403151452391805634;\\n        vks[7] = 10857046999023057135944570762232829481370756359578518086990519993285655852781;\\n        vks[8] = 4082367875863433681332203403145435568316851327593401208105741076214120093531;\\n        vks[9] = 8495653923123431417604973247489272438418190587263600148770280649306958101930;\\n        vks[10] = 19465865793281917433205729628238261619528912558571179302590449641923237336493;\\n        vks[11] = 9836552181821908562825916423250803559339661121322145769320042878374376765273;\\n        vks[12] = 2972527452298515494899373054205226502120059050542082406518238980762330882252;\\n        vks[13] = 12421615868696903838937420292736115333185255389288618736203999552328749392036;\\n        vks[14] = 14776984778530556927051751502780752183532812497404227468852865294447689899684;\\n        vks[15] = 17685773495787771094438025456819460668298495540048327298895397288184307325705;\\n        vks[16] = 6664034107315858311511422569979074983940834486517859620395348427249564206809;\\n        vks[17] = 12760303119269580208319586542009971848846817012628300531806360956833814629985;\\n        vks[18] = 19366280974360769350356367686803112440430113251959095768046213591385594101452;\\n        vks[19] = 17093801976549281609260567293079493225703051358912668487337441826987698704629;\\n        vks[20] = 386851811089208845300030074706526125506346469239487083374842154361030488565;\\n        vks[21] = 18722900404056108381554785792201341384763351744307988156700500270397393292732;\\n        vks[22] = 4682885476595323933561358213075143845865774565593388066206531532132885959348;\\n        vks[23] = 5850994174503380950194612080364128937581319994284055744730951666132926716666;\\n        vks[24] = 15671798360572900223707477220512929244521356522801969550571363436690903144802;\\n        vks[25] = 10365135309026182539079935651272653598311663268323515026144018074820112882940;\\n        vks[26] = 19044951846105234723485623366315216752655547854406509098803621396685828349735;\\n        vks[27] = 19119610279035899152877324941264186837683296682672983594588992458876011602394;\\n        vks[28] = 3538973459932245424591080247559641414911379468388749572642782649132300694873;\\n        vks[29] = 15450719178532314846227623080510163606699070908397610381718487804798251587693;\\n        vks[30] = 16876617330818855626116296478024652384126117123695368471762633545558573896773;\\n        vks[31] = 16193141427372493169292876992166155262969525209114649123090477166198873198166;\\n        vks[32] = 12245164925172007974734702097824026495870184765972763204164284229199196985191;\\n        vks[33] = 12877388159301963624026183752692400587898554342657425638914901104687244639616;\\n        vks[34] = 1642518435529379014933816046234663107124606721915453421690810126711022023230;\\n        vks[35] = 15532519778263684349242587058200885042110074093745843241055075421064406476669;\\n        vks[36] = 1653927913992255150899961094135665055425982831140138862712571865555131509868;\\n        vks[37] = 19393088897719280708581363655688228044720171045462825030543833052850948179740;\\n        vks[38] = 13966415817554039303739898824237199730701799478932718815462469052086437585191;\\n        vks[39] = 754271034707522992282394485482277485341974743131758625275366007666120138859;\\n        vks[40] = 15884825247689712408312925540215748703066083669829831328659638305740457476879;\\n        vks[41] = 12771933037538988398040840113815326310960186624471152131651855797745402277939;\\n        vks[42] = 8394770979324344966026278699875572494666589345829918109276181251315274817937;\\n        vks[43] = 11484580623249470639116718499851788517924543321814685177346338720867864440295;\\n        vks[44] = 2607410923300790366774499215286000362261472013817978473990399675507507574512;\\n        vks[45] = 6958758652141884706015711090185066201141278356799200066863982636406009987588;\\n        vks[46] = 16765204562724608091354341011996342229773188726287008240326829505597474712634;\\n        vks[47] = 19739567344797965471793313547844484828999916933327397878003982434835796394260;\\n        vks[48] = 14074679229462710819872164161119812718373415447195746807959578699883989143186;\\n        vks[49] = 10588000997939792236273108802221683663922471858182522013077384244140964700796;\\n        vks[50] = 18426230130554689199393080729988153687119207645378405098824079273992586065141;\\n        vks[51] = 8226264301303767066406457085142607073537275812022598298127625299231198633417;\\n        vks[52] = 12018424623824039804768990498045015717817358670618610760607022379116842166459;\\n        vks[53] = 19818733566309795525407328598613797183517002730310020378704719724980933829476;\\n        vks[54] = 2155416569781886977751998854462475956858609815137594097300025364802951637558;\\n        vks[55] = 141128875753766578724317791812215586543301183501077871848828184088510192733;\\n        vks[56] = 13790369610773720064654435593502578583928416453136099982166437289553717459667;\\n        vks[57] = 1426290107802354671423278516763628976372973919574173083902016091405801970355;\\n        return vks;\\n    }\\n\\n    /// @dev return true if the public signal is aliased\\n    function isAliased(uint[] calldata _pubSignals) public pure returns (bool) {\\n        // Alias check\\n        if (_pubSignals[0] >= 1461501637330902918203684832716283019655932542976) { return true; }\\n        if (_pubSignals[1] >= 1461501637330902918203684832716283019655932542976) { return true; }\\n        if (_pubSignals[2] >= 21888242871839275222246405745257275088548364400416034343698204186575808495617) { return true; }\\n        if (_pubSignals[3] >= 1461501637330902918203684832716283019655932542976) { return true; }\\n        if (_pubSignals[4] >= 452312848583266388373324160190187140051835877600158453279131187530910662656) { return true; }\\n        if (_pubSignals[5] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[6] >= 21888242871839275222246405745257275088548364400416034343698204186575808495617) { return true; }\\n        if (_pubSignals[7] >= 904625697166532776746648320380374280103671755200316906558262375061821325312) { return true; }\\n        if (_pubSignals[8] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[9] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[10] >= 512) { return true; }\\n        if (_pubSignals[11] >= 131072) { return true; }\\n        if (_pubSignals[12] >= 512) { return true; }\\n        if (_pubSignals[13] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[14] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[15] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[16] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[17] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[18] >= 18446744073709551616) { return true; }\\n        if (_pubSignals[19] >= 256) { return true; }\\n        if (_pubSignals[20] >= 256) { return true; }\\n        return false;\\n    }\\n\\n    function verifyProof(uint[] calldata _proofs, uint[] calldata _pubSignals) public view returns (bool) {\\n        // Check Argument\\n        require(_proofs.length == proofLength, \\\"Invalid proof\\\");\\n        require(_pubSignals.length == pubSignalLength, \\\"Invalid public signal\\\");\\n        if (isAliased(_pubSignals)) { return false; }\\n        assembly {\\n            // G1 function to multiply a G1 value(x,y) to value in an address\\n            function g1_mulAccC(pR, x, y, s) {\\n                let success\\n                let mIn := mload(0x40)\\n                mstore(mIn, x)\\n                mstore(add(mIn, 32), y)\\n                mstore(add(mIn, 64), s)\\n\\n                success := staticcall(sub(gas(), 2000), 7, mIn, 96, mIn, 64)\\n\\n                if iszero(success) {\\n                    mstore(0, 0)\\n                    return(0, 0x20)\\n                }\\n\\n                mstore(add(mIn, 64), mload(pR))\\n                mstore(add(mIn, 96), mload(add(pR, 32)))\\n\\n                success := staticcall(sub(gas(), 2000), 6, mIn, 128, pR, 64)\\n\\n                if iszero(success) {\\n                    mstore(0, 0)\\n                    return(0, 0x20)\\n                }\\n            }\\n\\n            function checkPairing(pA, pB, pC, pubSignals, pMem) -> isOk {\\n                let _pPairing := add(pMem, pPairing)\\n                let _pVk := add(pMem, pVk)\\n\\n                mstore(_pVk, IC0x)\\n                mstore(add(_pVk, 32), IC0y)\\n\\n                // Compute the linear combination it.vkey.vk_x\\n                g1_mulAccC(_pVk, IC1x, IC1y, calldataload(add(pubSignals, 0)))\\n                g1_mulAccC(_pVk, IC2x, IC2y, calldataload(add(pubSignals, 32)))\\n                g1_mulAccC(_pVk, IC3x, IC3y, calldataload(add(pubSignals, 64)))\\n                g1_mulAccC(_pVk, IC4x, IC4y, calldataload(add(pubSignals, 96)))\\n                g1_mulAccC(_pVk, IC5x, IC5y, calldataload(add(pubSignals, 128)))\\n                g1_mulAccC(_pVk, IC6x, IC6y, calldataload(add(pubSignals, 160)))\\n                g1_mulAccC(_pVk, IC7x, IC7y, calldataload(add(pubSignals, 192)))\\n                g1_mulAccC(_pVk, IC8x, IC8y, calldataload(add(pubSignals, 224)))\\n                g1_mulAccC(_pVk, IC9x, IC9y, calldataload(add(pubSignals, 256)))\\n                g1_mulAccC(_pVk, IC10x, IC10y, calldataload(add(pubSignals, 288)))\\n                g1_mulAccC(_pVk, IC11x, IC11y, calldataload(add(pubSignals, 320)))\\n                g1_mulAccC(_pVk, IC12x, IC12y, calldataload(add(pubSignals, 352)))\\n                g1_mulAccC(_pVk, IC13x, IC13y, calldataload(add(pubSignals, 384)))\\n                g1_mulAccC(_pVk, IC14x, IC14y, calldataload(add(pubSignals, 416)))\\n                g1_mulAccC(_pVk, IC15x, IC15y, calldataload(add(pubSignals, 448)))\\n                g1_mulAccC(_pVk, IC16x, IC16y, calldataload(add(pubSignals, 480)))\\n                g1_mulAccC(_pVk, IC17x, IC17y, calldataload(add(pubSignals, 512)))\\n                g1_mulAccC(_pVk, IC18x, IC18y, calldataload(add(pubSignals, 544)))\\n                g1_mulAccC(_pVk, IC19x, IC19y, calldataload(add(pubSignals, 576)))\\n                g1_mulAccC(_pVk, IC20x, IC20y, calldataload(add(pubSignals, 608)))\\n                g1_mulAccC(_pVk, IC21x, IC21y, calldataload(add(pubSignals, 640)))\\n                // -A\\n                mstore(_pPairing, calldataload(pA))\\n                mstore(add(_pPairing, 32), mod(sub(q, calldataload(add(pA, 32))), q))\\n\\n                // B\\n                mstore(add(_pPairing, 64), calldataload(pB))\\n                mstore(add(_pPairing, 96), calldataload(add(pB, 32)))\\n                mstore(add(_pPairing, 128), calldataload(add(pB, 64)))\\n                mstore(add(_pPairing, 160), calldataload(add(pB, 96)))\\n\\n                // alpha1\\n                mstore(add(_pPairing, 192), alphax)\\n                mstore(add(_pPairing, 224), alphay)\\n\\n                // beta2\\n                mstore(add(_pPairing, 256), betax1)\\n                mstore(add(_pPairing, 288), betax2)\\n                mstore(add(_pPairing, 320), betay1)\\n                mstore(add(_pPairing, 352), betay2)\\n\\n                // it.vkey.vk_x\\n                mstore(add(_pPairing, 384), mload(add(pMem, pVk)))\\n                mstore(add(_pPairing, 416), mload(add(pMem, add(pVk, 32))))\\n\\n                // gamma2\\n                mstore(add(_pPairing, 448), gammax1)\\n                mstore(add(_pPairing, 480), gammax2)\\n                mstore(add(_pPairing, 512), gammay1)\\n                mstore(add(_pPairing, 544), gammay2)\\n\\n                // C\\n                mstore(add(_pPairing, 576), calldataload(pC))\\n                mstore(add(_pPairing, 608), calldataload(add(pC, 32)))\\n\\n                // delta2\\n                mstore(add(_pPairing, 640), deltax1)\\n                mstore(add(_pPairing, 672), deltax2)\\n                mstore(add(_pPairing, 704), deltay1)\\n                mstore(add(_pPairing, 736), deltay2)\\n\\n                let success := staticcall(sub(gas(), 2000), 8, _pPairing, 768, _pPairing, 0x20)\\n\\n                isOk := and(success, mload(_pPairing))\\n            }\\n\\n            let pMem := mload(0x40)\\n            mstore(0x40, add(pMem, pLastMem))\\n\\n            // Validate all evaluations\\n            let isValid := checkPairing(_proofs.offset, add(_proofs.offset, 64), add(_proofs.offset, 192), _pubSignals.offset, pMem)\\n\\n            mstore(0, isValid)\\n            return(0, 0x20)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a4e5ed71be34f89afe3d48fe0bcb6a0c4d6fb0d46c19d2ed1f7925626ee936c\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612055806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636450764e14610046578063721ea4ac1461006e578063ae440fb014610081575b600080fd5b610059610054366004611ec8565b610096565b60405190151581526020015b60405180910390f35b61005961007c366004611f0a565b61046d565b610089610f95565b6040516100659190611f76565b6000600160a01b838360008181106100b0576100b0611fba565b90506020020135106100c457506001610467565b600160a01b838360018181106100dc576100dc611fba565b90506020020135106100f057506001610467565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018383600281811061012457610124611fba565b905060200201351061013857506001610467565b600160a01b8383600381811061015057610150611fba565b905060200201351061016457506001610467565b600160f81b8383600481811061017c5761017c611fba565b905060200201351061019057506001610467565b600160401b838360058181106101a8576101a8611fba565b90506020020135106101bc57506001610467565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001838360068181106101f0576101f0611fba565b905060200201351061020457506001610467565b600160f91b8383600781811061021c5761021c611fba565b905060200201351061023057506001610467565b600160401b8383600881811061024857610248611fba565b905060200201351061025c57506001610467565b600160401b8383600981811061027457610274611fba565b905060200201351061028857506001610467565b6102008383600a81811061029e5761029e611fba565b90506020020135106102b257506001610467565b620200008383600b8181106102c9576102c9611fba565b90506020020135106102dd57506001610467565b6102008383600c8181106102f3576102f3611fba565b905060200201351061030757506001610467565b600160401b8383600d81811061031f5761031f611fba565b905060200201351061033357506001610467565b600160401b8383600e81811061034b5761034b611fba565b905060200201351061035f57506001610467565b600160401b8383600f81811061037757610377611fba565b905060200201351061038b57506001610467565b600160401b838360108181106103a3576103a3611fba565b90506020020135106103b757506001610467565b600160401b838360118181106103cf576103cf611fba565b90506020020135106103e357506001610467565b600160401b838360128181106103fb576103fb611fba565b905060200201351061040f57506001610467565b6101008383601381811061042557610425611fba565b905060200201351061043957506001610467565b6101008383601481811061044f5761044f611fba565b905060200201351061046357506001610467565b5060005b92915050565b6000600884146104c45760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064015b60405180910390fd5b601582146105145760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964207075626c6963207369676e616c000000000000000000000060448201526064016104bb565b61051e8383610096565b1561052b57506000610f8d565b610f63565b600060405183815284602082015285604082015260408160608360076107d05a03fa915081610563576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa91505080610594576000805260206000f35b5050505050565b7f20ab7a1c4a992786d5b9a69f74df4ef247cabe14ccfbb92bea3f416d6cfc9ea485527f2719cb064d6a772f615affaf17fe27db8a4600d6a05cf67d925b99f42ef51b0960208601526000608086018661063887357f1c36135c257451fe3251d13a15bd16f71be3020f4fe8242769e61408897d4e617f0ebbb5aafe125824faf56bb34f720b3e026b4826897df819ebbd790c7e2346d984610530565b61068860208801357f25cabfc24ced2c19f1e3a9dd42817e12322c5a3403dfceec56507a45e6fa50f57f2ad0ed350f7636860adecec11f565410f9ebb75c3ed6e172c115576e54637ecc84610530565b6106d760408801357f2964c93d5fd40a9063bf7e9b6b25d128af1fde75f551fb510633e36b93354dbc7edaf34b2bc477e368ab501b071c4665216424cf9df8362f7c180540c83cb1f584610530565b61072760608801357f0cef8b9bcc0af3dd852d40c97afb9f29c1396c2d483c2c302bf6a01a1105dafa7f0a5a6b5420a5437a579946cd9c41d8b8c05fbf6cc318c5d561e76445631792b484610530565b61077760808801357f16ea756c68d336065c6ec5e7e0d54fc701ccdc01a4547c82f4f4688f5fb51cfc7f22a5ec6cb6b5132d04f6451eadcb87229bc1fdc4535ace17e75a3eb8246c196284610530565b6107c760a08801357f2a4550e0751c5cb5a4726e86135d61e6e31317420424a17d433e37fea6cae1da7f2a1b0f8d456ce71910fae94651061757288b595aa767c7fd9124991428535f2784610530565b61081760c08801357f2228cc121876ba710e5b792f2745618703adb095feb937a2579fff31601c586d7f07d2fced3f3b8ad4b5a5ccc6e9fdd034bc74620a687c0f30763ed46f1dd4f55984610530565b61086760e08801357f23ccfe45d048f80a9ef60941f8324181040128260c41396d98b6ed38bfb10e567f254fd3b0100dea0dd3523bdce92b03b5e8510e4d8043735a3aa0b8110fdad44584610530565b6108b86101008801357f1c7857e9a718cc87f942162233dc5d6b6f59d3f5982c108e1572f981fb6ffd807f1b12848a90f8f6f882d48e88b7390630534f169cadb14faaa4db5b49037e176784610530565b6109096101208801357f2257183af8db5615723f7882c25d00810abcd624737601dc8def4b8c16a3a77d7f03a1a1ead63a86a1d6d5c0b3d2610e7f62faad6e913274d24b25d86d372df23e84610530565b61095a6101408801357f2ae0196e33d5ed32deddec27af9952b9062f41a8d37fabb8dc0341f968c0871c7f03a8170be9eaa9379465565763eda336a0bc43d8abd9d1ca0ce158d7dfc52c6c84610530565b6109ab6101608801357f01aae6fb9cbac8b496ed016cc7a708ae6bdfb9078befad716246d39aff35206b7f1ee0b61289091d73b68fc020af70728687d49ed105ba70b22242ed2ab51ca12784610530565b6109fc6101808801357f1c3ca86dca425a59b142023a71672a05bf14e2edd16d39bc0f5a8f05ed7470337f231e7e131cfe4b7afc779e4910e352ab6f08bfbdf363b2040b5b874db07b830f84610530565b610a4d6101a08801357f19640ad2dbb4a4da72b018baca2969d97185cef37d6c754bc5b47a2695da6de77f128f45a1805009ba35b23ab9ad60a7734b7caafd832e70962f4328b985f7219184610530565b610a9e6101c08801357f0f62848fefce2f75d2671b021d81c288f2690f722de4a9a7c169b7ea72f382047f05c3be06573c9c66b733cf2b97f388284ce7070545095b019d77ddf20ec1b6f084610530565b610aef6101e08801357f2ba432fe1284570879b80f16aa6cca79a5b743d60a335fc134c1ee45ee8901147f2510c4fed0df6fc704577c2543cfbfa1a5e587d8bf504c37ccac1268ac05ac3a84610530565b610b406102008801357f176898a0401c122fcc8143328527d2945d01a361b2252f8a757e1e900a6de27c7f1f1dfc73ab33951f90ff3da22101680ae3a172381ab5b2bb67c7f3a2f4b78e9284610530565b610b916102208801357f122fe68d6f8e29468c0446953e1decd974276972f038a709791d43eeb0c75dc97f28bce06d57a4791073c572c9af291c7c7a5d94490425747c3763ab604024f4f584610530565b610be26102408801357f2bd101746e0ef0d00716567cb6fda4f4eb198497c4b6d12b869573759fc923647f1a922ff15cd43274cdf36ec871f8449963d80937d009d5e73908d7f830dfa8bb84610530565b610c326102608801357e4fe048f09a51a08793a769bdb60309c00247ed7ca574023a85d42e86e7dc5d7f04c3ec2bfab275d51e5ec572faac76613767be61880237d388711ccc638aea3684610530565b610c836102808801357f0327406867be8acaa0c27dcb538c8d26e27d06336fd28fa980f0788713fb5ab37f1e7d1295ce2b469e3d57f34e682932a22c508d51d2df492e804f0d8e88e97ad384610530565b50823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208201527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408201527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610160820152600087015161018082015260206000018701516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f2b094a2349fa0c816828b92aaa638e678ad5348a8a4671e1a31a2b235ae755ad6102808201527f15bf4a8e8b30f866dc8d55e62253bdf465e84b6d12f89fd7c3b08908bde5f7596102a08201527f06926413176e6bce2e9885a0c1a42ec0e532202771da46e083ad7dafbefa60cc6102c08201527f1b7662abd10433044638b91851782196525ecad4dc3a4b7e8cdeaa06c3d1a0a46102e08201526020816103008360086107d05a03fa9051169695505050505050565b6040516103808101604052610f81818560c0890160408a018a61059b565b90508060005260206000f35b949350505050565b60606000610fa560156002611fe6565b610fb090601061200e565b63ffffffff1667ffffffffffffffff811115610fce57610fce612032565b604051908082528060200260200182016040528015610ff7578160200160208202803683370190505b5090507f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e28160008151811061102e5761102e611fba565b6020026020010181815250507f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19268160018151811061106e5761106e611fba565b6020026020010181815250507f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c816002815181106110ae576110ae611fba565b6020026020010181815250507f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab816003815181106110ee576110ee611fba565b6020026020010181815250507f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a78160048151811061112e5761112e611fba565b6020026020010181815250507f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec88160058151811061116e5761116e611fba565b6020026020010181815250507f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2816006815181106111ae576111ae611fba565b6020026020010181815250507f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed816007815181106111ee576111ee611fba565b6020026020010181815250507f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b8160088151811061122e5761122e611fba565b6020026020010181815250507f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8160098151811061126e5761126e611fba565b6020026020010181815250507f2b094a2349fa0c816828b92aaa638e678ad5348a8a4671e1a31a2b235ae755ad81600a815181106112ae576112ae611fba565b6020026020010181815250507f15bf4a8e8b30f866dc8d55e62253bdf465e84b6d12f89fd7c3b08908bde5f75981600b815181106112ee576112ee611fba565b6020026020010181815250507f06926413176e6bce2e9885a0c1a42ec0e532202771da46e083ad7dafbefa60cc81600c8151811061132e5761132e611fba565b6020026020010181815250507f1b7662abd10433044638b91851782196525ecad4dc3a4b7e8cdeaa06c3d1a0a481600d8151811061136e5761136e611fba565b6020026020010181815250507f20ab7a1c4a992786d5b9a69f74df4ef247cabe14ccfbb92bea3f416d6cfc9ea481600e815181106113ae576113ae611fba565b6020026020010181815250507f2719cb064d6a772f615affaf17fe27db8a4600d6a05cf67d925b99f42ef51b0981600f815181106113ee576113ee611fba565b6020026020010181815250507f0ebbb5aafe125824faf56bb34f720b3e026b4826897df819ebbd790c7e2346d98160108151811061142e5761142e611fba565b6020026020010181815250507f1c36135c257451fe3251d13a15bd16f71be3020f4fe8242769e61408897d4e618160118151811061146e5761146e611fba565b6020026020010181815250507f2ad0ed350f7636860adecec11f565410f9ebb75c3ed6e172c115576e54637ecc816012815181106114ae576114ae611fba565b6020026020010181815250507f25cabfc24ced2c19f1e3a9dd42817e12322c5a3403dfceec56507a45e6fa50f5816013815181106114ee576114ee611fba565b6020026020010181815250507edaf34b2bc477e368ab501b071c4665216424cf9df8362f7c180540c83cb1f58160148151811061152d5761152d611fba565b6020026020010181815250507f2964c93d5fd40a9063bf7e9b6b25d128af1fde75f551fb510633e36b93354dbc8160158151811061156d5761156d611fba565b6020026020010181815250507f0a5a6b5420a5437a579946cd9c41d8b8c05fbf6cc318c5d561e76445631792b4816016815181106115ad576115ad611fba565b6020026020010181815250507f0cef8b9bcc0af3dd852d40c97afb9f29c1396c2d483c2c302bf6a01a1105dafa816017815181106115ed576115ed611fba565b6020026020010181815250507f22a5ec6cb6b5132d04f6451eadcb87229bc1fdc4535ace17e75a3eb8246c19628160188151811061162d5761162d611fba565b6020026020010181815250507f16ea756c68d336065c6ec5e7e0d54fc701ccdc01a4547c82f4f4688f5fb51cfc8160198151811061166d5761166d611fba565b6020026020010181815250507f2a1b0f8d456ce71910fae94651061757288b595aa767c7fd9124991428535f2781601a815181106116ad576116ad611fba565b6020026020010181815250507f2a4550e0751c5cb5a4726e86135d61e6e31317420424a17d433e37fea6cae1da81601b815181106116ed576116ed611fba565b6020026020010181815250507f07d2fced3f3b8ad4b5a5ccc6e9fdd034bc74620a687c0f30763ed46f1dd4f55981601c8151811061172d5761172d611fba565b6020026020010181815250507f2228cc121876ba710e5b792f2745618703adb095feb937a2579fff31601c586d81601d8151811061176d5761176d611fba565b6020026020010181815250507f254fd3b0100dea0dd3523bdce92b03b5e8510e4d8043735a3aa0b8110fdad44581601e815181106117ad576117ad611fba565b6020026020010181815250507f23ccfe45d048f80a9ef60941f8324181040128260c41396d98b6ed38bfb10e5681601f815181106117ed576117ed611fba565b6020026020010181815250507f1b12848a90f8f6f882d48e88b7390630534f169cadb14faaa4db5b49037e17678160208151811061182d5761182d611fba565b6020026020010181815250507f1c7857e9a718cc87f942162233dc5d6b6f59d3f5982c108e1572f981fb6ffd808160218151811061186d5761186d611fba565b6020026020010181815250507f03a1a1ead63a86a1d6d5c0b3d2610e7f62faad6e913274d24b25d86d372df23e816022815181106118ad576118ad611fba565b6020026020010181815250507f2257183af8db5615723f7882c25d00810abcd624737601dc8def4b8c16a3a77d816023815181106118ed576118ed611fba565b6020026020010181815250507f03a8170be9eaa9379465565763eda336a0bc43d8abd9d1ca0ce158d7dfc52c6c8160248151811061192d5761192d611fba565b6020026020010181815250507f2ae0196e33d5ed32deddec27af9952b9062f41a8d37fabb8dc0341f968c0871c8160258151811061196d5761196d611fba565b6020026020010181815250507f1ee0b61289091d73b68fc020af70728687d49ed105ba70b22242ed2ab51ca127816026815181106119ad576119ad611fba565b6020026020010181815250507f01aae6fb9cbac8b496ed016cc7a708ae6bdfb9078befad716246d39aff35206b816027815181106119ed576119ed611fba565b6020026020010181815250507f231e7e131cfe4b7afc779e4910e352ab6f08bfbdf363b2040b5b874db07b830f81602881518110611a2d57611a2d611fba565b6020026020010181815250507f1c3ca86dca425a59b142023a71672a05bf14e2edd16d39bc0f5a8f05ed74703381602981518110611a6d57611a6d611fba565b6020026020010181815250507f128f45a1805009ba35b23ab9ad60a7734b7caafd832e70962f4328b985f7219181602a81518110611aad57611aad611fba565b6020026020010181815250507f19640ad2dbb4a4da72b018baca2969d97185cef37d6c754bc5b47a2695da6de781602b81518110611aed57611aed611fba565b6020026020010181815250507f05c3be06573c9c66b733cf2b97f388284ce7070545095b019d77ddf20ec1b6f081602c81518110611b2d57611b2d611fba565b6020026020010181815250507f0f62848fefce2f75d2671b021d81c288f2690f722de4a9a7c169b7ea72f3820481602d81518110611b6d57611b6d611fba565b6020026020010181815250507f2510c4fed0df6fc704577c2543cfbfa1a5e587d8bf504c37ccac1268ac05ac3a81602e81518110611bad57611bad611fba565b6020026020010181815250507f2ba432fe1284570879b80f16aa6cca79a5b743d60a335fc134c1ee45ee89011481602f81518110611bed57611bed611fba565b6020026020010181815250507f1f1dfc73ab33951f90ff3da22101680ae3a172381ab5b2bb67c7f3a2f4b78e9281603081518110611c2d57611c2d611fba565b6020026020010181815250507f176898a0401c122fcc8143328527d2945d01a361b2252f8a757e1e900a6de27c81603181518110611c6d57611c6d611fba565b6020026020010181815250507f28bce06d57a4791073c572c9af291c7c7a5d94490425747c3763ab604024f4f581603281518110611cad57611cad611fba565b6020026020010181815250507f122fe68d6f8e29468c0446953e1decd974276972f038a709791d43eeb0c75dc981603381518110611ced57611ced611fba565b6020026020010181815250507f1a922ff15cd43274cdf36ec871f8449963d80937d009d5e73908d7f830dfa8bb81603481518110611d2d57611d2d611fba565b6020026020010181815250507f2bd101746e0ef0d00716567cb6fda4f4eb198497c4b6d12b869573759fc9236481603581518110611d6d57611d6d611fba565b6020026020010181815250507f04c3ec2bfab275d51e5ec572faac76613767be61880237d388711ccc638aea3681603681518110611dad57611dad611fba565b6020026020010181815250507e4fe048f09a51a08793a769bdb60309c00247ed7ca574023a85d42e86e7dc5d81603781518110611dec57611dec611fba565b6020026020010181815250507f1e7d1295ce2b469e3d57f34e682932a22c508d51d2df492e804f0d8e88e97ad381603881518110611e2c57611e2c611fba565b6020026020010181815250507f0327406867be8acaa0c27dcb538c8d26e27d06336fd28fa980f0788713fb5ab381603981518110611e6c57611e6c611fba565b6020908102919091010152919050565b60008083601f840112611e8e57600080fd5b50813567ffffffffffffffff811115611ea657600080fd5b6020830191508360208260051b8501011115611ec157600080fd5b9250929050565b60008060208385031215611edb57600080fd5b823567ffffffffffffffff811115611ef257600080fd5b611efe85828601611e7c565b90969095509350505050565b60008060008060408587031215611f2057600080fd5b843567ffffffffffffffff80821115611f3857600080fd5b611f4488838901611e7c565b90965094506020870135915080821115611f5d57600080fd5b50611f6a87828801611e7c565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015611fae57835183529284019291840191600101611f92565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b63ffffffff81811683821602808216919082811461200657612006611fd0565b505092915050565b63ffffffff81811683821601908082111561202b5761202b611fd0565b5092915050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000817000a",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getVerificationKeys()": {
        "details": "returns the verification keys in the order that the verifier expects them: alpha, beta, gamma, delta, ICs.."
      },
      "isAliased(uint256[])": {
        "details": "return true if the public signal is aliased"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}